jobs:
  preview:
    if: ${{ github.repository_owner == 'Slimefun' && github.event.workflow_run.conclusion
      == 'success' }}
    name: Build and Publish the jar
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Grab PR & run ID and download the artifact
      uses: actions/github-script@v7
      with:
        script: "const allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  run_id: context.payload.workflow_run.id,\n\
          });\n\nfor (const artifact of allArtifacts.data.artifacts) {\n  // Extract\
          \ the PR number and commit hash from the artifact name\n  const match =\
          \ /^slimefun-(\\d+)-([a-f0-9]{8})$/.exec(artifact.name);\n  if (match) {\n\
          \    require(\"fs\").appendFileSync(\n      process.env.GITHUB_ENV,\n  \
          \    `\\nPR_NUMBER=${match[1]}` +\n        `\\nCOMMIT_HASH=${match[2]}`\n\
          \    );\n\n    const download = await github.rest.actions.downloadArtifact({\n\
          \      owner: context.repo.owner,\n      repo: context.repo.repo,\n    \
          \  artifact_id: artifact.id,\n      archive_format: 'zip',\n    });\n  \
          \  require('fs').writeFileSync(`${process.env.GITHUB_WORKSPACE}/preview.zip`,\
          \ Buffer.from(download.data))\n\n    break;\n  }\n}\n"
    - continue-on-error: true
      name: Unzip
      run: 'unzip preview.zip

        rm preview.zip

        mv ''Slimefun vPreview Build #${{ env.PR_NUMBER }}-${{ env.COMMIT_HASH }}.jar''
        preview.jar

        '
    - continue-on-error: true
      name: Upload to preview service
      run: "curl -X POST \\\n  -H 'Authorization: ${{ secrets.PUBLISH_TOKEN }}' \\\
        \n  -H \"X-Checksum: $(sha256sum 'preview.jar' | awk '{print $1}')\" \\\n\
        \  --data-binary '@preview.jar' \\\n  https://preview-builds.walshy.dev/upload/Slimefun/${{\
        \ env.PR_NUMBER }}/${{ env.COMMIT_HASH }}\n"
    - continue-on-error: true
      name: Post comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        message: '### Slimefun preview build


          A Slimefun preview build is available for testing!

          Commit: ${{ env.COMMIT_HASH }}


          https://preview-builds.walshy.dev/download/Slimefun/${{ env.PR_NUMBER }}/${{
          env.COMMIT_HASH }}


          > **Note**: This is not a supported build and is only here for the purposes
          of testing.

          > Do not run this on a live server and do not report bugs anywhere but this
          PR!

          '
        number: ${{ env.PR_NUMBER }}
name: Preview builds
on:
  repository_dispatch:
    types: trigger-ga___preview-builds.yml
permissions:
  contents: read
  pull-requests: write
